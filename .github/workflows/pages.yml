name: Build & Deploy Pages (main → gh-pages)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "dist/**"
      - "docs/**"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout con LFS
      - uses: actions/checkout@v4
        with:
          lfs: true

      # 2) Node + cache npm
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # 3) Instalar deps
      - name: Install
        run: npm ci --no-audit --no-fund

      # 4) Higiene: eliminar claves Expo sueltas en package.json
      - name: Clean stray Expo keys in package.json
        run: |
          node - <<'NODE'
          const fs=require('fs');
          const p=JSON.parse(fs.readFileSync('package.json','utf8'));
          delete p.icon; delete p.web; delete p.splash;
          fs.writeFileSync('package.json', JSON.stringify(p,null,2));
          console.log('package.json cleaned');
          NODE

      # 5) Generar assets válidos + app.json mínimo
      - name: Generate CI assets and app.json
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          mkdir -p assets
          convert -size 1024x1024 xc:none PNG32:assets/icon.png
          cp assets/icon.png assets/icon.local.png
          convert assets/icon.png -resize 512x512 PNG32:assets/favicon.png
          cp assets/favicon.png assets/favicon.local.png
          convert -size 2048x2048 xc:white PNG32:assets/splash.png
          cp assets/splash.png assets/splash.local.png

          cat > app.json <<'JSON'
          {
            "expo": {
              "name": "rn-sudoku",
              "slug": "rn-sudoku",
              "platforms": ["ios", "android", "web"],
              "userInterfaceStyle": "automatic",
              "icon": "./assets/icon.png",
              "splash": {
                "image": "./assets/splash.png",
                "resizeMode": "contain",
                "backgroundColor": "#ffffff"
              },
              "web": {
                "bundler": "metro",
                "favicon": "./assets/favicon.png",
                "build": { "publicPath": "/rn-sudoku/", "pwa": false }
              }
            }
          }
          JSON

      # 6) Preferir Sharp
      - name: Enable sharp image pipeline
        run: npm i -D sharp sharp-cli

      - name: Check sharp presence
        run: node -e "require.resolve('sharp');console.log('sharp present ✅')"

      # 7) Evitar cachés previas
      - name: Disable image utils cache
        run: echo "EXPO_IMAGE_UTILS_NO_CACHE=1" >> $GITHUB_ENV

      # 8) Build Expo Web -> dist/
      - name: Build web (to dist/)
        run: npm run build:web
        env:
          EXPO_APP_JSON: app.json

      # 9) Arreglar rutas absolutas + favicon para subpath
      - name: Fix base paths for GH Pages + ship favicon
        env:
          SITE_BASE: /rn-sudoku
        run: |
          set -e
          SRC="assets/favicon.png"
          [ -f "$SRC" ] || SRC="assets/icon.png"
          cp "$SRC" dist/favicon.png || true
          sudo apt-get update && sudo apt-get install -y imagemagick
          convert "$SRC" -define icon:auto-resize=256,128,64,48,32,16 dist/favicon.ico || true

          node - <<'NODE'
          const fs=require('fs');
          const SITE_BASE=process.env.SITE_BASE||'';
          function patch(file){
            if(!fs.existsSync(file)) return;
            let html=fs.readFileSync(file,'utf8');
            html=html.replace(/<link[^>]*rel=["']icon["'][^>]*>\s*/gi,'');
            html=html.replace('</head>', `  <link rel="icon" href="${SITE_BASE}/favicon.ico"/>\n</head>`);
            html=html.replace(/(src|href)=["']\/(_expo\/[^"']+)["']/gi, (_,attr,p)=>`${attr}="${SITE_BASE}/${p}"`);
            fs.writeFileSync(file, html);
          }
          ['dist/index.html','dist/404.html'].forEach(patch);
          NODE

      # 10) SPA fallback + nojekyll
      - name: SPA fallback & nojekyll
        run: |
          echo '<!DOCTYPE html><html><head><meta charset="utf-8"><meta http-equiv="refresh" content="0; url=./index.html"></head><body></body></html>' > dist/404.html
          touch dist/.nojekyll
          rm -f dist/sw.js dist/registerSW.* || true

      # 11) Deploy a gh-pages
      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
